*,
::before,
::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

/*
! tailwindcss v3.4.14 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: currentColor;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
  tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol',
    'Noto Color Emoji';
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  letter-spacing: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder,
textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role='button'] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden]:where(:not([hidden='until-found'])) {
  display: none;
}

body {
  -webkit-tap-highlight-color: transparent;
  -webkit-font-smoothing: antialiased;
}

@font-face {
  font-family: 'Arsenal';

  font-weight: 400;

  font-display: swap;

  font-style: normal;

  src:
    local('Arsenal') url('../themes/tw/fonts/Arsenal/Regular.ttf') format('truetype'),
    url('../themes/tw/fonts/Arsenal/Regular.woff') format('woff');
}

@font-face {
  font-family: 'Arsenal';

  font-weight: 400;

  font-display: swap;

  font-style: italic;

  src:
    local('Arsenal') url('../themes/tw/fonts/Arsenal/Italic.ttf') format('truetype'),
    url('../themes/tw/fonts/Arsenal/Italic.woff') format('woff');
}

@font-face {
  font-family: 'Arsenal';

  font-weight: 700;

  font-display: swap;

  font-style: normal;

  src:
    local('Arsenal') url('../themes/tw/fonts/Arsenal/Bold.ttf') format('truetype'),
    url('../themes/tw/fonts/Arsenal/Bold.woff') format('woff');
}

p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  text-wrap: balance;
}

p {
  text-wrap: pretty;
}

.shower {
  &.list {
    --tw-bg-opacity: 1;
    background-color: rgb(112 128 144 / var(--tw-bg-opacity));
  }
  &.list {
    .slide {
      border-radius: 0.125rem;
    }
  }
  &.full {
    --tw-bg-opacity: 1;
    background-color: rgb(24 64 74 / var(--tw-bg-opacity));
  }
  h1 {
    font-family: Arsenal, sans-serif;
  }
  h1 {
    --tw-text-opacity: 1;
    color: rgb(255 255 255 / var(--tw-text-opacity));
  }
  .slide.with-title h2 {
    text-align: left !important;
    left: 0;
    padding-left: 100px;
    transform: translateY(-50%);
    margin-top: -24px;
  }
  .slide.with-title h2 > span {
    font-size: 48px;
  }
  &.all-clear .slide::after {
    content: none;
  }
  .slide {
    --tw-bg-opacity: 1;
    background-color: rgb(24 64 74 / var(--tw-bg-opacity));
  }
  .slide {
    padding: 24px 90px 0;
  }
  .slide {
    --tw-shadow: 0 20px 50px rgb(0 0 0 / 0%);
    --tw-shadow-colored: 0 20px 50px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }
  .slide {
    border-radius: 2px !important;
    h2,
    h3,
    p,
    figure p,
    figcaption,
    p.note,
    li,
    li::before {
      --tw-text-opacity: 1;
      color: rgb(255 255 255 / var(--tw-text-opacity));
    }
  }
  .slide a:has(img) {
    background: none;
  }
  h2 {
    font-family: Arsenal, sans-serif;
  }
  h2 {
    font-size: 52px;
  }
  h2.shout {
    margin: 0px;
  }
  h2.shout {
    font-size: 4.5rem;
    line-height: 1;
  }
  i {
    font-family: Arsenal, sans-serif;
  }
  table tr {
    --color-line: #708090;
  }
  b {
    color: #fff;
    background: #b3441e;
    padding: 0 7px;
    border-radius: 4px;
  }
  a {
    --tw-text-opacity: 1;
    color: rgb(179 68 30 / var(--tw-text-opacity));
  }
  ol,
  ul {
    line-height: 1.8;
  }
  ol,
  ul {
    li {
      font-size: 34px;
    }
  }
  table {
    margin-bottom: 0px;
  }
  table {
    th,
    td {
      --tw-text-opacity: 1;
      color: rgb(255 255 255 / var(--tw-text-opacity));
    }
    th[scope='column'] {
      text-align: center;
    }
    th {
      font-size: 18px;
    }
    td {
      font-size: 20px;
    }
  }
  table img {
    margin-left: auto;
    margin-right: auto;
  }
  pre.place {
    width: 90%;
  }
  section img:not(.cover) {
    border-radius: 4px;
  }
  .scrollbar {
    &::-webkit-scrollbar {
      width: 18px;
    }
    &::-webkit-scrollbar-track,
    &::-webkit-scrollbar-thumb {
      border-radius: 0.125rem;
    }
    &::-webkit-scrollbar-track {
      --tw-bg-opacity: 1;
      background-color: rgb(24 64 74 / var(--tw-bg-opacity));
    }
    &::-webkit-scrollbar-thumb {
      --tw-bg-opacity: 1;
      background-color: rgb(179 68 30 / var(--tw-bg-opacity));
    }
  }
  .slide {
    --tw-shadow: 0 20px 50px rgb(0 0 0 / 30%);
    --tw-shadow-colored: 0 20px 50px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }
  /* .slide ol {
    counter-reset: slide;
  }

  .slide ol > li:first-of-type::before {
    counter-set: slide;
  }

  .slide ol > li::before {
    counter-increment: slide;
    content: counter(slide) '.';
  } */
  .slide blockquote::before {
    --tw-text-opacity: 1;
    color: rgb(112 128 144 / var(--tw-text-opacity));
  }
  a.copyright {
    padding: 3px 10px;
    border-radius: 5px;
    background-color: #b3441e;
    background-image: none;
    color: #fff;
    transition: opacity 0.3s;
    &:hover {
      opacity: 0.8;
    }
  }
  @supports not selector(::-webkit-scrollbar) {
    .scrollbar {
      scrollbar-color: #b3441e #18404a;
    }
  }
  pre {
    margin-bottom: 0 !important;
    border-radius: 4px;
    background-color: #222;
  }
  pre code {
    font-size: 18px;
  }
  .dots {
    --linear-gradient: linear-gradient(currentColor 0 0);
    color: #fff;
    width: 52px;
    height: 46px;
    background:
      var(--linear-gradient) 0 100%,
      var(--linear-gradient) 50% 100%,
      var(--linear-gradient) 100% 100%;
    background-size: 10px calc(100% - 6px);
    background-repeat: no-repeat;
    position: relative;
  }
  .dots::before {
    content: '';
    position: absolute;
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background: currentColor;
    left: 0;
    top: 0;
  }
  code {
    padding-top: 0 !important;
    padding-bottom: 0 !important;
    line-height: 1.5 !important;
  }
  @layer scroll {
    @property --scrollbar-thumb-color {
      syntax: '<color>';

      inherits: true;

      initial-value: rgba(0, 0, 0, 0);
    }

    body.platform-windows {
      [data-scrollbar-thumb] {
        /* This prevent scrollbar from shifting the page content */
        scrollbar-gutter: stable;
        transition: --scrollbar-thumb-color 1s;
        &::-webkit-scrollbar {
          width: 8px;
          height: 8px;
        }
        &::-webkit-scrollbar-thumb {
          background: var(--scrollbar-thumb-color);
          border-radius: 8px;
        }
        &::-webkit-scrollbar-track {
          background: transparent;
        }
        &::-webkit-scrollbar-button {
          display: none;
        }
        &[data-scrollbar-thumb='true']:hover {
          --scrollbar-thumb-color: rgba(0, 0, 0, 0.8);
        }
      }
    }
  }
  @supports not selector(::-webkit-scrollbar) {
    scrollbar-color: rgba(0, 0, 0, 0.8) transparent;

    scrollbar-width: thin;
  }
}

.static {
  position: static;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.\!left-0 {
  left: 0px !important;
}

.left-1\/2 {
  left: 50%;
}

.left-\[50\%\] {
  left: 50%;
}

.top-1\/2 {
  top: 50%;
}

.top-\[50\%\] {
  top: 50%;
}

.z-10 {
  z-index: 10;
}

.float-right {
  float: right;
}

.m-0 {
  margin: 0px;
}

.m-auto {
  margin: auto;
}

.\!my-10 {
  margin-top: 2.5rem !important;
  margin-bottom: 2.5rem !important;
}

.\!my-\[20px\] {
  margin-top: 20px !important;
  margin-bottom: 20px !important;
}

.-mx-8 {
  margin-left: -2rem;
  margin-right: -2rem;
}

.my-2 {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
}

.ml-4 {
  margin-left: 1rem;
}

.mt-2 {
  margin-top: 0.5rem;
}

.mt-5 {
  margin-top: 1.25rem;
}

.mt-8 {
  margin-top: 2rem;
}

.mt-\[24px\] {
  margin-top: 24px;
}

.mt-\[70px\] {
  margin-top: 70px;
}

.flex {
  display: flex;
}

.table {
  display: table;
}

.h-full {
  height: 100%;
}

.w-\[50\%\] {
  width: 50%;
}

.w-\[55\%\] {
  width: 55%;
}

.w-\[90\%\] {
  width: 90%;
}

.-translate-x-1\/2 {
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x))
    skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.-translate-x-\[50\%\] {
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x))
    skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.-translate-y-1\/2 {
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x))
    skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.-translate-y-\[50\%\] {
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x))
    skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[100px\] {
  --tw-translate-x: 100px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x))
    skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[200px\] {
  --tw-translate-x: 200px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x))
    skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[400px\] {
  --tw-translate-x: 400px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x))
    skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[450px\] {
  --tw-translate-x: 450px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x))
    skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[500px\] {
  --tw-translate-x: 500px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x))
    skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[600px\] {
  --tw-translate-x: 600px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x))
    skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[70px\] {
  --tw-translate-x: 70px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x))
    skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-y-\[100px\] {
  --tw-translate-y: 100px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x))
    skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-y-\[150px\] {
  --tw-translate-y: 150px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x))
    skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-y-\[200px\] {
  --tw-translate-y: 200px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x))
    skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-y-\[340px\] {
  --tw-translate-y: 340px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x))
    skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-y-\[400px\] {
  --tw-translate-y: 400px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x))
    skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-y-\[80px\] {
  --tw-translate-y: 80px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x))
    skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.rotate-\[-30deg\] {
  --tw-rotate: -30deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x))
    skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.rotate-\[30deg\] {
  --tw-rotate: 30deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x))
    skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.flex-col {
  flex-direction: column;
}

.items-start {
  align-items: flex-start;
}

.items-center {
  align-items: center;
}

.justify-end {
  justify-content: flex-end;
}

.justify-center {
  justify-content: center;
}

.gap-8 {
  gap: 2rem;
}

.rounded-\[4px\] {
  border-radius: 4px;
}

.rounded-sm {
  border-radius: 0.125rem;
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.p-0 {
  padding: 0px;
}

.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.pl-\[100px\] {
  padding-left: 100px;
}

.text-left {
  text-align: left;
}

.text-center {
  text-align: center;
}

.text-5xl {
  font-size: 3rem;
  line-height: 1;
}

.text-\[82px\] {
  font-size: 82px;
}

.uppercase {
  text-transform: uppercase;
}

.lowercase {
  text-transform: lowercase;
}

.italic {
  font-style: italic;
}

.leading-6 {
  line-height: 1.5rem;
}

.\!text-black {
  --tw-text-opacity: 1 !important;
  color: rgb(34 34 34 / var(--tw-text-opacity)) !important;
}

.text-gray {
  --tw-text-opacity: 1;
  color: rgb(112 128 144 / var(--tw-text-opacity));
}

.opacity-90 {
  opacity: 0.9;
}

.outline {
  outline-style: solid;
}

.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate)
    var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

mark {
  background-color: #b3441e !important;
  color: #fff;
}

.loader {
  width: -moz-fit-content;
  width: fit-content;
  font-size: 62px;
  line-height: 1.5;
  color: transparent;
  font-weight: bold;
  text-transform: uppercase;
  -webkit-text-stroke: 2px #fff;
  background:
    radial-gradient(1.13em at 50% 1.6em, #fff 99%, transparent 101%) calc(50% - 1.6em) 0/3.2em 100% text,
    radial-gradient(1.13em at 50% -0.8em, transparent 99%, #fff 101%) 50% 0.8em/3.2em 100% repeat-x text;
  animation: l9 2s linear infinite;
}

.loader:before {
  content: 'Загрузка...';
}

@keyframes l9 {
  to {
    background-position:
      calc(50% + 1.6em) 0,
      calc(50% + 3.2em) 0.8em;
  }
}

.con {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}

.brutalist-button {
  display: flex;
  align-items: center;
  cursor: pointer;
  width: 169px;
  height: 60px;
  background-color: #000;
  color: #fff;
  text-decoration: none;
  font-family: Arial, sans-serif;
  font-weight: bold;
  border: 3px solid #fff;
  outline: 3px solid #000;
  box-shadow: 6px 6px 0 #00a4ef;
  transition: all 0.1s ease-out;
  padding: 0 15px;
  box-sizing: border-box;
  position: relative;
  overflow: hidden;
}

.brutalist-button::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.8), transparent);
  z-index: 1;
  transition: none;
  /* Initially hide the pseudo-element */
  opacity: 0;
}

@keyframes slide {
  0% {
    left: -100%;
  }

  100% {
    left: 100%;
  }
}

.brutalist-button:hover::before {
  /* Show the pseudo-element on hover */
  opacity: 1;
  animation: slide 2s infinite;
}

.brutalist-button:hover {
  transform: translate(-4px, -4px);
  box-shadow: 10px 10px 0 #000;
  background-color: #000;
  color: #fff;
}

@keyframes slide {
  0% {
    left: -100%;
  }

  100% {
    left: 100%;
  }
}

.brutalist-button:active {
  transform: translate(4px, 4px);
  box-shadow: 0px 0px 0 #00a4ef;
  background-color: #fff;
  color: #000;
  border-color: #000;
}

.button-text {
  display: flex;
  flex-direction: column;
  line-height: 1.2;
  transition: transform 0.2s ease-out;
  position: relative;
  z-index: 1;
}

.brutalist-button:hover .button-text {
  transform: skew(-5deg);
}

.brutalist-button:active .button-text {
  transform: skew(5deg);
}

.button-text span:first-child {
  font-size: 11px;
  text-transform: uppercase;
}

.button-text span:last-child {
  font-size: 16px;
  text-transform: uppercase;
}

:root {
  --refsize: 20px;
  --width: 60vw;
}

html {
  font-size: var(--refsize);
  line-height: 1.75rem;
  -webkit-text-size-adjust: 100%;
  background-color: #eff3f9;
}

html,
body {
  margin: 0;
  padding: 0;
}

.toc {
  position: relative;
  padding: 3rem;
  border-radius: 1rem;
  font-size: 1.5rem;
  overflow: auto;
}

.entry {
  display: grid;
  grid-template-columns: auto max-content;
  grid-template-areas: 'chapter page';
  align-items: end;
  gap: 0 1ch;
}

.chapter {
  grid-area: chapter;
  position: relative;
  overflow: hidden;
}

.chapter::after {
  position: absolute;
  padding-left: 0.25ch;
  content: ' . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . '
    '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . '
    '. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ';
  text-align: right;
}

.page {
  grid-area: page;
}

hr {
  height: 0;
  margin: 3rem 0;
  border: 0;
  border-bottom: 1px solid #ccc;
}

pre {
  width: 100%;
  padding: 1rem;
  font-family: 'Courier New', Courier, monospace;
  font-size: 1rem;
}

code,
pre {
  white-space: pre-wrap !important;
}

@media only screen and (max-width: 599px) {
  :root {
    --refsize: 16px;
    --width: calc(100vw - 20px);
  }
}

@media only screen and (min-width: 600px) {
  :root {
    --refsize: 18px;
    --width: 90vw;
  }
}

@media only screen and (min-width: 900px) {
  :root {
    --refsize: 20px;
    --width: 80vw;
  }
}

@media only screen and (min-width: 1200px) {
  :root {
    --width: 60vw;
  }
}

@media only screen and (min-width: 1800px) {
  :root {
    --width: 50vw;
  }
}

@keyframes jump-left {
  from {
    content: var(--tw-content);
    left: 0;
  }

  to {
    content: var(--tw-content);
    left: calc(100% - 10px);
  }
}

@keyframes jump-top {
  from {
    content: var(--tw-content);
    top: 0;
  }

  to {
    content: var(--tw-content);
    top: -0.1px;
  }
}

.before\:animate-jump::before {
  content: var(--tw-content);
  animation:
    jump-left 1.5s linear infinite alternate,
    jump-top 0.75s cubic-bezier(0, 200, 0.8, 200) infinite;
}

.group:has(#first-item.active) .group-has-\[\#first-item\.active\]\:hidden {
  display: none;
}
